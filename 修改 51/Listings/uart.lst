C51 COMPILER V9.57.0.0   UART                                                              05/13/2023 18:46:44 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: D:\keil\keil51\C51\BIN\C51.EXE USER\UART\uart.C COMPACT OPTIMIZE(9,SPEED) BROWSE INCDIR(.\Listings;
                    -.\USER;.\USER\OLED;.\USER\MOTOR;.\USER\TIMER;.\USER\ADC;.\USER\UART;.\USER\ACTION;.\USER\UART;.\USER\PWM) DEBUG OBJECTEX
                    -TEND PRINT(.\Listings\uart.lst) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include "stc15w4k.h"
   2          #include "uart.h"
   3          #include "adc.h"
   4          #include <intrins.h>
   5          /*----------------series define------------------------------*/
   6          
   7          /*定时器3用作串口3的波特率发生器,定时器4用作串口4的波特率发生器*/
   8          //#define FOSC 11059200L          //系统频率
   9          #define FOSC 24000000L //18432000L
  10          #define BAUD 9600               //串口波特率
  11          #define NONE_PARITY     0       //无校验
  12          #define ODD_PARITY      1       //奇校验
  13          #define EVEN_PARITY     2       //偶校验
  14          #define MARK_PARITY     3       //标记校验
  15          #define SPACE_PARITY    4       //空白校验
  16          #define PARITYBIT EVEN_PARITY    //定义校验位
  17          
  18          #define S3RI  0x01              //S3CON.0
  19          #define S3TI  0x02              //S3CON.1
  20          #define S3RB8 0x04              //S3CON.2
  21          #define S3TB8 0x08              //S3CON.3
  22          #define S3_S0 0x02              //P_SW2.1
  23          
  24          #define S4RI  0x01              //S4CON.0
  25          #define S4TI  0x02              //S4CON.1
  26          #define S4RB8 0x04              //S4CON.2
  27          #define S4TB8 0x08              //S4CON.3
  28          #define S4_S0 0x04              //P_SW2.2
  29          
  30          
  31          u8 bdata UartFlag;
  32          sbit Uart1BusyStatus = UartFlag ^ 0;
  33          sbit Uart2BusyStatus = UartFlag ^ 1;
  34          sbit Uart3BusyStatus = UartFlag ^ 2;
  35          sbit Uart4BusyStatus = UartFlag ^ 3;
  36          sbit UartFirstByte   = UartFlag ^ 4;
  37          sbit HostCommand     = UartFlag ^ 5;
  38          
  39          u8 idata UART_cnt;
  40          u8 idata UARTbuffer[10];    /*10byte*/
  41          
  42          sbit Uart1RXD         = P3 ^ 0;    /*PIN13,??1??*/
  43          sbit Uart1TXD         = P3 ^ 1;    /*PIN14,??1??*/
  44          
  45          void uartDelayMs( u16 delay_time)
  46          {
  47   1      u8 idata delay_cnt;
  48   1      while(delay_time--)
  49   1             {
  50   2             for(delay_cnt=0;delay_cnt<200;delay_cnt++)
  51   2                   {
  52   3                   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_
             -();
C51 COMPILER V9.57.0.0   UART                                                              05/13/2023 18:46:44 PAGE 2   

  53   3                   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_
             -();
  54   3                   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_
             -();
  55   3                   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_
             -();
  56   3                   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_
             -();
  57   3                   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_
             -();
  58   3                   }
  59   2             _nop_();
  60   2             }
  61   1      _nop_();
  62   1      }
  63          /*----------------------------------------------------------------------------------*/
  64          void UART1(void) interrupt 4           /*中断接受数据*/
  65          {
  66   1              u8 idata character;
  67   1              if (RI)
  68   1              {
  69   2                      HostCommand = 1;                                //设置标志
  70   2                      RI = 0;                                                 //清除RI位
  71   2                      character = SBUF;
  72   2                      if(character==0x3f)                     {IAP_CONTR = 0x60;SBUF=0x0a;}//复位到IAP;
  73   2                      if(UartFirstByte == 1)          {UARTbuffer[UART_cnt++] = character; }
  74   2                      if(character==0xaa)             {UartFirstByte = 1;UART_cnt = 0;}
  75   2                      if(character==0xbb)             {UartFirstByte = 0;HostCommand = 0;}
  76   2                      
  77   2              }
  78   1              if (TI)
  79   1              {
  80   2                      TI=0;                                                   //清除TI位
  81   2                      
  82   2              }
  83   1              HostCommand = 0;                                //清忙标志
  84   1              //UART1send_Abyte(character);
  85   1      }
  86          
  87          void UART1send_Abyte(u8 character)      /*发送u8数据*/
  88          {
  89   1              while(HostCommand);
  90   1              ACC=character;                                                                                  //获取校验位P(PSW.0)
  91   1              if(P)
  92   1              {
  93   2                      #if (PARITYBIT==ODD_PARITY)
                              TB8=0;                   //设置校验位为0
                              #elif (PARITYBIT==EVEN_PARITY)
  96   2                      TB8 = 1;               //设置校验位为1
  97   2                      #endif
  98   2              }
  99   1              else
 100   1              {
 101   2                      #if (PARITYBIT == ODD_PARITY)
                              TB8 = 1;                        //设置校验位为1
                              #elif (PARITYBIT==EVEN_PARITY)
 104   2                      TB8 = 0;                //设置校验位为0
 105   2                      #endif
 106   2              }
 107   1              HostCommand=1;
 108   1              SBUF=ACC;
 109   1      }
C51 COMPILER V9.57.0.0   UART                                                              05/13/2023 18:46:44 PAGE 3   

 110          void UART1send_AString(u8 *p)
 111          {
 112   1              while(*p)
 113   1              {
 114   2                      UART1send_Abyte(*p);
 115   2                      p++;
 116   2              }
 117   1      }
 118          void UART1send_AFloat(float f)
 119          {
 120   1              u8 idata  i;
 121   1              char farray[4] = {0};
 122   1              *(float*)farray = f;
 123   1              for(i=0;i<4;i++)
 124   1              UART1send_Abyte(farray[3-i]);
 125   1      }
 126          void Uart1Init(void)            //9600bps@30MHz 0.03%误差
 127          {
 128   1              #if (PARITYBIT == NONE_PARITY)
                      SCON = 0x50;                                                                                                                                            //8位可变波特率
                      #elif (PARITYBIT==ODD_PARITY)||(PARITYBIT==EVEN_PARITY)||(PARITYBIT == MARK_PARITY)
 131   1              SCON = 0xd0;                            //9位可变波特率，校验位初始为1
 132   1              #elif (PARITYBIT==SPACE_PARITY)
                      SCON = 0xd2;                                                                                                                                    //9位可变波特率，校验位初始为0
                      #endif
 135   1              AUXR |= 0x40;           //定时器时钟1T模式
 136   1              AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
 137   1              TMOD &= 0x0F;           //设置定时器模式
 138   1              TL1 = 0xF3;                     //设置定时初始值
 139   1              TH1 = 0xFC;                     //设置定时初始值
 140   1              ET1 = 0;                        //禁止定时器中断
 141   1              TR1 = 1;                        //定时器1开始计时
 142   1              UartFirstByte = 0;
 143   1              ES = 1;
 144   1              EA = 1;
 145   1      }
 146          
 147          
 148          
 149          
 150          
 151          
 152          
 153          
 154          
 155          
 156          
 157          
 158          
 159          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    315    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----       8
   DATA SIZE        =      1    ----
   IDATA SIZE       =     11       3
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
