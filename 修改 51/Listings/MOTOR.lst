C51 COMPILER V9.57.0.0   MOTOR                                                             05/13/2023 18:46:44 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN .\Objects\MOTOR.obj
COMPILER INVOKED BY: D:\keil\keil51\C51\BIN\C51.EXE USER\MOTOR\MOTOR.c COMPACT OPTIMIZE(9,SPEED) BROWSE INCDIR(.\Listing
                    -s;.\USER;.\USER\OLED;.\USER\MOTOR;.\USER\TIMER;.\USER\ADC;.\USER\UART;.\USER\ACTION;.\USER\UART;.\USER\PWM) DEBUG OBJECT
                    -EXTEND PRINT(.\Listings\MOTOR.lst) OBJECT(.\Objects\MOTOR.obj)

line level    source

   1          #include "MOTOR.h"
   2          #include "stc15w4k.h"
   3          #include "oled.h"
   4          #include "uart.h"
   5          #include "adc.h"
   6          #include <intrins.h>
   7          #include "action.h"
   8          
   9          #define FrontStatus P7
  10          #define BackStatus  P6
  11          
  12          bit idata timer_10ms=0;
  13          u16 bdata t_sum=0;
  14          char bdata motor_l_pwm;
  15          char bdata motor_r_pwm;
  16          
  17          u8 data frontPortData,frontPortDataA,frontPortDataB,frontPortDataC;  
  18          u8 data backPortData,backPortDataA,backPortDataB,backPortDataC;
  19          
  20          sbit MOTOR_LF_FRONT     = P4^5;
  21          sbit MOTOR_LF_BACK      = P4^6;
  22          
  23          sbit MOTOR_LB_FRONT     = P4^4;
  24          sbit MOTOR_LB_BACK      = P4^3;
  25          
  26          sbit MOTOR_RF_FRONT     = P4^7;
  27          sbit MOTOR_RF_BACK      = P4^0;
  28          
  29          sbit MOTOR_RB_FRONT     = P4^2;
  30          sbit MOTOR_RB_BACK      = P4^1;
  31          
  32          u8 idata motor_counter;
  33          
  34          /*100us自动装载*/
  35          void motor_tim0_init()
  36          {
  37   1              motor_counter = 0;
  38   1              AUXR |= 0x80;                   //定时器时钟1T模式
  39   1              TMOD =0x00;                             //设置定时器模式
  40   1              TL0 = 0x48;                             //设置定时初始值
  41   1              TH0 = 0xF4;                             //设置定时初始值
  42   1              TF0 = 0;                                //清除TF0标志
  43   1              TR0 = 1;                                //定时器0开始计时
  44   1              ET0     = 1;                            //使能定时器中断
  45   1              EA = 1;                                 //总计时器
  46   1      }
  47          
  48          void motor_pwm_set(char pwml,char pwmr)
  49          {
  50   1              if(pwml > 100)                          //电机速度限幅
  51   1              {
  52   2                      pwml = 100;
  53   2              }
C51 COMPILER V9.57.0.0   MOTOR                                                             05/13/2023 18:46:44 PAGE 2   

  54   1          if (pwml < -100)            //电机速度限幅
  55   1          {
  56   2              pwml = -100;
  57   2          }  
  58   1              if(pwmr > 100)                          //电机速度限幅
  59   1              {
  60   2                      pwmr = 100;
  61   2              }
  62   1          if (pwmr < -100)            //电机速度限幅
  63   1          {
  64   2              pwmr = -100;
  65   2          }
  66   1              motor_l_pwm=pwml;
  67   1              motor_r_pwm=pwmr;
  68   1      }
  69          void motor_init()
  70          {
  71   1              motor_pwm_set(0,0);     //电机PWM设置 0
  72   1              motor_tim0_init();   //模拟电机IO PWM波定时器初始化
  73   1      }
  74          
  75          //正反皆可 若为反则 pwm为负数
  76          
  77          void TestIrStatus(void)
  78          {
  79   1              u8 cnt_i,UserReg;
  80   1              u8 idata TestBuffer[11]="F:00000000";
  81   1              UserReg = frontPortData;
  82   1              for( cnt_i=2;cnt_i<10;cnt_i++)
  83   1                              {
  84   2                              if (UserReg & 0x80)   TestBuffer[cnt_i] ='1';
  85   2                              else                  TestBuffer[cnt_i] ='0';
  86   2                              UserReg <<= 1;
  87   2                              }
  88   1              OLED_ShowString(0,0,TestBuffer,16);
  89   1      
  90   1      
  91   1              TestBuffer[0] = 'B';
  92   1              UserReg = backPortData;
  93   1              for( cnt_i=2;cnt_i<10;cnt_i++)
  94   1                              {
  95   2                              if (UserReg & 0x80)   TestBuffer[cnt_i] ='1';
  96   2                              else                  TestBuffer[cnt_i] ='0';
  97   2                              UserReg <<= 1;
  98   2                              }
  99   1              OLED_ShowString(0,2,TestBuffer,16);
 100   1              _nop_();        
 101   1      }
 102          void brake()
 103          {
 104   1              motor_pwm_set(0,0);
 105   1              t_sum=0;
 106   1              timer_10ms=1;
 107   1              //TODO写计时器延时
 108   1              while(t_sum<=30)
 109   1              {
 110   2                      MOTOR_RF_FRONT = 1;
 111   2                      MOTOR_RF_BACK = 1;      
 112   2                      MOTOR_RB_FRONT = 1;
 113   2                      MOTOR_RB_BACK = 1;
 114   2                      MOTOR_LF_FRONT = 1;
 115   2                      MOTOR_LF_BACK = 1;       
C51 COMPILER V9.57.0.0   MOTOR                                                             05/13/2023 18:46:44 PAGE 3   

 116   2                      MOTOR_LB_FRONT = 1;
 117   2                      MOTOR_LB_BACK = 1;  
 118   2              }
 119   1              timer_10ms=0;
 120   1      }
 121          void motor_irp()        interrupt 1 using 1
 122          {
 123   1              if(!timer_10ms)t_sum=0;
 124   1              motor_counter++;
 125   1          if (motor_counter >= 100)           //pwm波周期设置 周期= 100 * 100us = 10000us=10ms 即电机pwm波频率100Hz 周期1
             -0ms
 126   1          {
 127   2                      if(timer_10ms)t_sum++;
 128   2              motor_counter = 0;
 129   2          }
 130   1              //左motor_pwm设置
 131   1              if (motor_l_pwm >= 0)
 132   1              {
 133   2                      //左轮正转
 134   2                      if(motor_counter < motor_l_pwm)  
 135   2                      {
 136   3                              MOTOR_LF_FRONT = 1;
 137   3                              MOTOR_LF_BACK = 0;       
 138   3                              MOTOR_LB_FRONT = 1;
 139   3                              MOTOR_LB_BACK = 0;      
 140   3                      }
 141   2                      else
 142   2                      {
 143   3                              MOTOR_LF_FRONT = 0;
 144   3                              MOTOR_LF_BACK = 0;      
 145   3                              
 146   3                              MOTOR_LB_FRONT = 0;
 147   3                              MOTOR_LB_BACK = 0;    
 148   3                      }
 149   2              }
 150   1              else
 151   1              {
 152   2                      //左轮反转
 153   2                      
 154   2                       if(motor_counter < -motor_l_pwm)
 155   2                      {
 156   3                              MOTOR_LF_FRONT = 0;
 157   3                              MOTOR_LF_BACK = 1;      
 158   3                              MOTOR_LB_FRONT = 0;
 159   3                              MOTOR_LB_BACK = 1;      
 160   3                      }
 161   2                      else
 162   2                      {
 163   3                              MOTOR_LF_FRONT = 0;
 164   3                              MOTOR_LF_BACK = 0;      
 165   3                              
 166   3                              MOTOR_LB_FRONT = 0;
 167   3                              MOTOR_LB_BACK = 0;    
 168   3                      }
 169   2              }
 170   1              
 171   1              if (motor_r_pwm >= 0)
 172   1              {
 173   2                      //右轮正转
 174   2                      
 175   2                      if(motor_counter < motor_r_pwm)  
 176   2                      {
C51 COMPILER V9.57.0.0   MOTOR                                                             05/13/2023 18:46:44 PAGE 4   

 177   3                              MOTOR_RF_FRONT = 1;
 178   3                              MOTOR_RF_BACK = 0;      
 179   3                              MOTOR_RB_FRONT = 1;
 180   3                              MOTOR_RB_BACK = 0;      
 181   3                      }
 182   2                      else
 183   2                      {
 184   3                              MOTOR_RF_FRONT = 0;
 185   3                              MOTOR_RF_BACK = 0;      
 186   3                              
 187   3                              MOTOR_RB_FRONT = 0;
 188   3                              MOTOR_RB_BACK = 0;    
 189   3                      }
 190   2              }
 191   1              else
 192   1              {
 193   2                      //右轮反转
 194   2                      
 195   2                       if(motor_counter < -motor_r_pwm)
 196   2                      {
 197   3                              MOTOR_RF_FRONT = 0;
 198   3                              MOTOR_RF_BACK = 1;      
 199   3                              MOTOR_RB_FRONT = 0;
 200   3                              MOTOR_RB_BACK = 1;      
 201   3                      }
 202   2                      else
 203   2                      {
 204   3                              MOTOR_RF_FRONT = 0;
 205   3                              MOTOR_RF_BACK = 0;      
 206   3                              
 207   3                              MOTOR_RB_FRONT = 0;
 208   3                              MOTOR_RB_BACK = 0;    
 209   3                      }
 210   2              }
 211   1      /*------3中取二规则读取七路传感器--------
 212   1      /*前端传感器数据循环更新*/
 213   1              frontPortDataA = frontPortDataB;
 214   1              frontPortDataB = frontPortDataC;
 215   1              frontPortDataC = FrontStatus & 0x7f;    
 216   1              frontPortData = (frontPortDataB & ( frontPortDataA | frontPortDataC)) | (frontPortDataA & frontPortDataC)
             -;
 217   1      /*后端传感器数据循环更新*/
 218   1              backPortDataA = backPortDataB;
 219   1              backPortDataB = backPortDataC;
 220   1              backPortDataC = BackStatus & 0x7f;
 221   1              backPortData = (backPortDataB & ( backPortDataA | backPortDataC)) | (backPortDataA & backPortDataC);
 222   1              
 223   1      /*------3中取二规则------*/     
 224   1              _nop_();
 225   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    476    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =      1      11
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
