C51 COMPILER V9.57.0.0   PWM                                                               05/13/2023 18:46:44 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Objects\PWM.obj
COMPILER INVOKED BY: D:\keil\keil51\C51\BIN\C51.EXE USER\PWM\PWM.c COMPACT OPTIMIZE(9,SPEED) BROWSE INCDIR(.\Listings;.\
                    -USER;.\USER\OLED;.\USER\MOTOR;.\USER\TIMER;.\USER\ADC;.\USER\UART;.\USER\ACTION;.\USER\UART;.\USER\PWM) DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\PWM.lst) OBJECT(.\Objects\PWM.obj)

line level    source

   1          #include "PWM.h"
   2          #include "stc15w4k.h"
   3          #include "timer.h"
   4          #define  CYCLE  0x07d0L//定义PWM周期(最大值为32767) 2000
   5          sbit PWM2=P2^7;
   6          sbit PWM3=P2^1;
   7          sbit PWM4=P2^2;
   8          sbit PWM5=P2^3;
   9          sbit PWM6=P0^7;
  10          sbit PWM7=P0^6;
  11          
  12          void PWM_config(void)
  13          {
  14   1              P0 &= ~0xc0;                    //设置P0.6/.P0.7电平
  15   1              P2 &=~0x8e;                             //设置P2.1/P2.2/P2.3/P2.7电平
  16   1              P_SW2|=0x80;
  17   1              Timer2_Init();
  18   1              PWMCKS = 0x10;
  19   1              PWMC = CYCLE;                   //设置PWM周期
  20   1              PWM2T1 = 1;
  21   1              PWM2T2 = 0;
  22   1              PWM2CR = 0x08;                  //PWM2输出到P2.7
  23   1              PWM3T1 = 1;
  24   1              PWM3T2 = 0;
  25   1              PWM3CR = 0x00;                  //PWM3输出到P2.1
  26   1              PWM4T1 = 1;
  27   1              PWM4T2 = 0;
  28   1              PWM4CR = 0x00;                  //P WM4输出到P2.2
  29   1              PWM5T1 = 1;
  30   1              PWM5T2 = 0;
  31   1              PWM5CR = 0x00;                  //PWMS输出到P2.3
  32   1              PWM6T1 = 1;
  33   1              PWM6T2 = 0;
  34   1              PWM6CR = 0x08;                  //PWM6输出到P0.7
  35   1              PWM7T1 = 1;
  36   1              PWM7T2 = 0;
  37   1              PWM7CR = 0x08;                  //PWM7输出到P0.6
  38   1              PWMCFG = 0x00;                  //配置PWM的输出初始电平
  39   1              PWMCR = 0x3f;                   //使能PWM信号输出
  40   1              PWMCR|=0x80;                    //使能PWM模块
  41   1              P_SW2 &=~0x80;
  42   1      }
  43          void PWM2_2_SetPwmWide(unsigned short Wide)
  44          {
  45   1              if (Wide == 0)
  46   1              {
  47   2                      PWMCR &=~0x01;
  48   2                      PWM2 =0;
  49   2              }
  50   1              else if (Wide == CYCLE)
  51   1              {
  52   2                      PWMCR &=~0x01;
  53   2                      PWM2 =1;
C51 COMPILER V9.57.0.0   PWM                                                               05/13/2023 18:46:44 PAGE 2   

  54   2              }
  55   1              else
  56   1              {
  57   2                      P_SW2|=0x80;
  58   2                      PWM2T1 = Wide;
  59   2                      P_SW2 &=~0x80;
  60   2                      PWMCR |=0x01;
  61   2              }
  62   1      }
  63          void PWM3_SetPwmWide(unsigned short Wide)
  64          {
  65   1              if (Wide == 0)
  66   1              {
  67   2                      PWMCR &=~0x02;
  68   2                      PWM3 = 0;
  69   2              }
  70   1              else if (Wide == CYCLE)
  71   1              {
  72   2                      PWMCR &=~0x02;
  73   2                      PWM3 = 1;
  74   2              }
  75   1              else
  76   1              {
  77   2                      P_SW2|=0x80;
  78   2                      PWM3T1 = Wide;
  79   2                      P_SW2 &=~0x80;
  80   2                      PWMCR |= 0x02;
  81   2              }
  82   1      }
  83          void PWM4_SetPwmWide(unsigned short Wide)
  84          {
  85   1              if (Wide == 0)
  86   1              {
  87   2                      PWMCR &=~0x04;
  88   2                      PWM4 = 0;
  89   2              }
  90   1              else if (Wide == CYCLE)
  91   1              {
  92   2                      PWMCR &=~0x04;
  93   2                      PWM4 = 1;
  94   2              }
  95   1              else
  96   1              {
  97   2                      P_SW2|=0x80;
  98   2                      PWM4T1 = Wide;
  99   2                      P_SW2 &=~0x80;
 100   2                      PWMCR |= 0x04;
 101   2              }
 102   1      }
 103          void PWM5_SetPwmWide(unsigned short Wide)
 104          {
 105   1              if (Wide == 0)
 106   1              {
 107   2                      PWMCR &=~0x08;
 108   2                      PWM5 = 0;
 109   2              }
 110   1              else if (Wide == CYCLE)
 111   1              {
 112   2                      PWMCR &=~0x08;
 113   2                      PWM5 = 1;
 114   2              }
 115   1              else
C51 COMPILER V9.57.0.0   PWM                                                               05/13/2023 18:46:44 PAGE 3   

 116   1              {
 117   2                      P_SW2|=0x80;
 118   2                      PWM5T1 = Wide;
 119   2                      P_SW2 &= ~0x80;
 120   2                      PWMCR |= 0x08;
 121   2              }
 122   1      }
 123          void PWM6_2_SetPwmWide(unsigned short Wide)
 124          {
 125   1              if (Wide == 0)
 126   1              {
 127   2                      PWMCR &=~0x10;
 128   2                      PWM6 = 0;
 129   2              }
 130   1              else if (Wide == CYCLE)
 131   1              {
 132   2                      PWMCR &=~0x10;
 133   2                      PWM6 = 1;
 134   2              }
 135   1              else
 136   1              {
 137   2                      P_SW2|=0x80;
 138   2                      PWM6T1 = Wide;
 139   2                      P_SW2 &=~0x80;
 140   2                      PWMCR |=0x10;
 141   2              }
 142   1      }
 143          void PWM7_2_SetPwmWide(unsigned short Wide)
 144          {
 145   1              if (Wide == 0)
 146   1              {
 147   2                      PWMCR &=~0x20;
 148   2                      PWM7 = 0;
 149   2              }
 150   1              else if (Wide == CYCLE)
 151   1              {
 152   2                      PWMCR &=~0x20;
 153   2                      PWM7 =- 1;
 154   2              }
 155   1              else
 156   1              {
 157   2                      P_SW2|=0x80;
 158   2                      PWM7T1 = Wide;
 159   2                      P_SW2 &=~0x80;
 160   2                      PWMCR |= 0x20;
 161   2              }
 162   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    354    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
